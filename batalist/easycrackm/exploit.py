import itertools

#0:alp 1:num
flag=[0,0,1,0,1,1,1,1,0,1,1,0,0,1,1,0,1,1,0,1,0,0,1,1,1,1,0,1,1,1,0,1]
data="0"*3+"1"*2+"2"*2+"4"*3+"5"*2+"6"*1+"7"*3+"8"*3+"9"*1+"a"*1+"b"*3+"c"*1+"d"*2+"e"*2+"f"*3

flag_dict = {"0":3,"1":2,"2":2,"3":0,"4":3,"5":2,"6":1,"7":3,"8":3,"9":1,"a":1,"b":3,"c":1,"d":2,"e":2,"f":3}

sums4=[0x15e,0xda,0x12f,0x131,0x100,0x131,0xfb,0x102]
xor4=[0x52,0xc,0x1,0xf,0x5c,0x5,0x53,0x58]
sums8=[0x129,0x103,0x12b,0x131,0x135,0x10b,0xff,0xff]
xor8=[0x1,0x57,0x7,0xd,0xd,0x53,0x51,0x51]



##G1
G1 = []
for i in range(10):
  flag_dict_cpy = flag_dict
  temp = []
  temp.append(str(i))
  if flag_dict[str(i)] <= 0:
    continue
  else:
    flag_dict[str(i)] -= 1
 

##############
return 
##############


count_count = -1
for a in itertools.permutations(data,len(data)):
  count_count += 1
  if count_count % 0x1000000 == 0:
    print("[+]"+hex(count_count))
  break_flag=0
  
  #const check
  if a[1]!="f" or  a[5]!="8" or  a[6]!="7" or a[9]!="7" or  a[17]!="2" or  a[25]!="4" or  a[29]!="5":
    continue 
  
  #flag check
  for ib,b in enumerate(a):
    if flag[ib]==0 and (0x30<=ord(b)<=0x39):
      break_flag=1
      break
  if break_flag==1:
    break_flag=0
    continue

  #FIRST sum4
  for ix in range(8):
    c = 0
    if ord(a[ix*4+0])+ord(a[ix*4+1])+ord(a[ix*4+2])+  ord(a[ix*4+3]) != sum4[ix]:
      break_flag=1
      break
  if break_flag==1:
    continue

  print("sum4: ")
  print(a)
