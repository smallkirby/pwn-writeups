
import angr
import claripy

p = angr.Project("./easy_crack_me")

n = 39
flag = claripy.BVS('flag', n * 8)
print(flag)
#for byte in flag.chop(8):
#    state.add_constraints(byte >= b'0')
#    state.add_constraints(byte <= b'9')
# state.memory.store(0x403048, flag)
argv = ["./easy_crack_me"]
argv.append(flag)
state = p.factory.entry_state(args=argv)

sm = p.factory.simulation_manager(state)
sm.explore(find=0x400e24, avoid=[0x4007cb, 0x40080e, 0x40093a, 0x400bde, 0x400c2c, 0x400d17, 0x400d81, 0x400e01] )

found = sm.found[0]
ans = found.solver.eval(flag, cast_to=bytes)
print(ans)
