#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys
import string

FILENAME = "./flagstore"
LIBCNAME = ""

hosts = ("","localhost","localhost")
ports = (0,12300,23947)
rhp1 = {'host':hosts[0],'port':ports[0]}    #for actual server
rhp2 = {'host':hosts[1],'port':ports[1]}    #for localhost 
rhp3 = {'host':hosts[2],'port':ports[2]}    #for localhost running on docker
context(os='linux',arch='amd64')
binf = ELF(FILENAME)
libc = ELF(LIBCNAME) if LIBCNAME!="" else None


## utilities #########################################

def hoge():
  pass

def check(_str):
  global c
  c.recvuntil("enter q.\n")
  c.sendline(_str)
  c.recvuntil("is of length ")
  return int(c.recvline().rstrip())

## exploit ###########################################

def exploit():
  global c
  mmax = 6
  candidates = ""
  strs =  "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&*+,-./:;<=>?@^_|~]"
  done = False

  while True:
    start = mmax
    for i in range(len(candidates)+1):
        for _c in strs:
            print("flag{{{0}}}".format(candidates[:i]+_c+candidates[i:]))
            temp = check("flag{{{0}}}".format(candidates[:i]+_c+candidates[i:]))
            print(temp)
            #print("flag{{{0}}} = {1}".format(_c*i,hex(temp)))
            if temp>mmax:
              mmax = temp
              candidates = candidates[:i] + _c + candidates[i:]
              done = True
              break
        if done:
            print("HIT: "+hex(mmax))
            done = False
            break
    print(candidates + "=" + str(mmax))
    if start == mmax:
      break

## main ##############################################

if __name__ == "__main__":
    global c
    
    if len(sys.argv)>1:
      if sys.argv[1][0]=="d":
        cmd = """
          set follow-fork-mode parent
        """
        c = gdb.debug(FILENAME,cmd)
      elif sys.argv[1][0]=="r":
        c = remote(rhp1["host"],rhp1["port"])
      elif sys.argv[1][0]=="v":
        c = remote(rhp3["host"],rhp3["port"])
    else:
        c = remote(rhp2['host'],rhp2['port'])
    exploit()
    c.interactive()
