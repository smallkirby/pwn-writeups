2020-10-24 01:16:02 INFO  (LoggingInitialization) Using log config file: jar:file:/usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Framework/Generic/lib/Generic.jar!/generic.log4j.xml  
2020-10-24 01:16:02 INFO  (LoggingInitialization) Using log file: /home/wataru/Documents/ctf/hacklu2020/just_the_right_spot/public/anylisis_log.txt  
2020-10-24 01:16:02 INFO  (Preferences) Loading user preferences: /home/wataru/.ghidra/.ghidra_9.1.2_PUBLIC/preferences  
2020-10-24 01:16:03 INFO  (ClassSearcher) Class search complete (657 ms)  
2020-10-24 01:16:03 INFO  (SSLContextInitializer) Initializing SSL Context  
2020-10-24 01:16:03 INFO  (SecureRandomFactory) Initializing Random Number Generator...  
2020-10-24 01:16:03 INFO  (SecureRandomFactory) Random Number Generator initialization complete: NativePRNGNonBlocking  
2020-10-24 01:16:03 INFO  (ApplicationTrustManagerFactory) Trust manager disabled, cacerts have not been set  
2020-10-24 01:16:03 INFO  (HeadlessAnalyzer) HEADLESS Script Paths:
    /home/wataru/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Extensions/Ghidra-Cpp-Class-Analyzer/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Extensions/gotools/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Features/Base/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Features/BytePatterns/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Features/Decompiler/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Features/FileFormats/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Features/FunctionID/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Features/GnuDemangler/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Features/Python/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Features/VersionTracking/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Processors/8051/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Processors/DATA/ghidra_scripts
    /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Processors/PIC/ghidra_scripts  
2020-10-24 01:16:03 INFO  (HeadlessAnalyzer) HEADLESS: execution starts  
2020-10-24 01:16:03 INFO  (HeadlessAnalyzer) Creating project: /home/wataru/Documents/ctf/hacklu2020/just_the_right_spot/public/ghidra  
2020-10-24 01:16:03 INFO  (DefaultProject) Creating project: /home/wataru/Documents/ctf/hacklu2020/just_the_right_spot/public/ghidra  
2020-10-24 01:16:03 INFO  (HeadlessAnalyzer) REPORT: Processing input files:   
2020-10-24 01:16:03 INFO  (HeadlessAnalyzer)      project: /home/wataru/Documents/ctf/hacklu2020/just_the_right_spot/public/ghidra  
2020-10-24 01:16:03 INFO  (HeadlessAnalyzer) IMPORTING: /home/wataru/Documents/ctf/hacklu2020/just_the_right_spot/public/./right_spot  
2020-10-24 01:16:04 DEBUG (ElfHeader$$EnhancerByCGLIB$$77b4107b) Elf symbol table section .dynsym linked to string table section .dynstr  
2020-10-24 01:16:04 DEBUG (ElfHeader$$EnhancerByCGLIB$$77b4107b) Elf symbol table section .symtab linked to string table section .strtab  
2020-10-24 01:16:04 DEBUG (ElfHeader$$EnhancerByCGLIB$$77b4107b) Elf relocation table section .rel.dyn linked to symbol table section .dynsym affecting PT_LOAD  
2020-10-24 01:16:04 DEBUG (ElfHeader$$EnhancerByCGLIB$$77b4107b) Elf relocation table section .rel.plt linked to symbol table section .dynsym affecting .got  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .rnd at 00017000 from file offset 24576  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .data at 00016000 from file offset 20480  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .got at 00015f4c from file offset 20300  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .dynamic at 00015e3c from file offset 20028  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .fini_array at 00015e38 from file offset 20024  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .init_array at 00015e30 from file offset 20016  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .gcc_except_table at 000141c0 from file offset 16832  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .eh_frame at 00013480 from file offset 13440  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .eh_frame_hdr at 0001316c from file offset 12652  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .rodata at 00013000 from file offset 12288  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .fini at 00012e98 from file offset 11928  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .text at 00011200 from file offset 4608  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .plt at 00011030 from file offset 4144  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .init at 00011000 from file offset 4096  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .rel.plt at 00010ac0 from file offset 2752  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .rel.dyn at 00010a18 from file offset 2584  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .gnu.version_r at 00010978 from file offset 2424  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .gnu.version at 0001091c from file offset 2332  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .dynstr at 000104dc from file offset 1244  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .dynsym at 0001020c from file offset 524  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .gnu.hash at 000101ec from file offset 492  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .note.ABI-tag at 000101cc from file offset 460  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .note.gnu.build-id at 000101a8 from file offset 424  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .interp at 00010194 from file offset 404  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block segment_5.6 at 00016014 from file offset 20500  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block segment_4.2 at 0001316a from file offset 12650  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block segment_3.2 at 00011024 from file offset 4132  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block segment_2.1 at 00010000 from file offset 0  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block segment_2.3 at 000101a7 from file offset 423  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block segment_2.10 at 00010976 from file offset 2422  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .shstrtab at OTHER:00000000 from file offset 107038  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .strtab at OTHER:00000000 from file offset 99716  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .symtab at OTHER:00000000 from file offset 96068  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .debug_ranges at OTHER:00000000 from file offset 95307  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .debug_str at OTHER:00000000 from file offset 63913  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .debug_line at OTHER:00000000 from file offset 59007  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .debug_abbrev at OTHER:00000000 from file offset 56195  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .debug_info at OTHER:00000000 from file offset 25314  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .debug_aranges at OTHER:00000000 from file offset 24602  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block .comment at OTHER:00000000 from file offset 24584  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Removing discardable alignment/filler segment at 000101a7  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Removing discardable alignment/filler segment at 00010976  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Removing discardable alignment/filler segment at 00011024  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Removing discardable alignment/filler segment at 0001316a  
2020-10-24 01:16:05 DEBUG (ElfProgramBuilder) Loading block _elfSectionHeaders at OTHER:00000000 from file offset 107388  
2020-10-24 01:16:05 INFO  (HeadlessAnalyzer) REPORT: Import succeeded with language "x86:LE:32:default" and cspec "gcc" for file: /home/wataru/Documents/ctf/hacklu2020/just_the_right_spot/public/./right_spot  
2020-10-24 01:16:05 INFO  (HeadlessAnalyzer) ANALYZING all memory and code: /home/wataru/Documents/ctf/hacklu2020/just_the_right_spot/public/./right_spot  
2020-10-24 01:16:05 INFO  (DWARFProgram) Read DWARF debug string table, 31394 bytes.  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type _M_data(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type _M_local_data(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type _S_copy_chars(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type _S_copy_chars(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type operator=(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type operator=(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type operator=(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type begin(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type end(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type rbegin(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type rend(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type resize(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type operator[](Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type at(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type front(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type back(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type operator+=(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type operator+=(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type operator+=(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type append(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type append(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type append(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type append(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type append(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type assign(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type assign(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type assign(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type assign(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type assign(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type insert(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type insert(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type insert(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type insert(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type insert(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type insert(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type insert(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type erase(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type erase(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type replace(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type rfind(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type rfind(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type rfind(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type compare(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type compare(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type compare(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type compare(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type compare(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type starts_with(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type starts_with(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type ends_with(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type ends_with(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type exception_ptr(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type exception_ptr(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type exception_ptr(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type assign(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string_view(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string_view(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type basic_string_view(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type compare(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type compare(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type compare(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type compare(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type compare(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type starts_with(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type starts_with(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type ends_with(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type ends_with(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type rfind(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type rfind(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type rfind(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_first_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type find_last_not_of(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type initializer_list(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type Init(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type abs(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type abs(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type abs(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type abs(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type allocate(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type assign(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:05 INFO  (DataTypeConflictHandler$1) Conflict with existing type Alloc(Function Signature Data Type), new type will be renamed with .conflict suffix  
2020-10-24 01:16:06 INFO  (DWARFImportSummary) DWARF import - total elapsed: 486ms  
2020-10-24 01:16:06 INFO  (DWARFImportSummary) DWARF data type import - elapsed: 228ms  
2020-10-24 01:16:06 INFO  (DWARFImportSummary) DWARF func & symbol import - elapsed: 155ms  
2020-10-24 01:16:06 INFO  (DWARFImportSummary) DWARF types imported: 300  
2020-10-24 01:16:06 INFO  (DWARFImportSummary) DWARF function signatures added: 481  
2020-10-24 01:16:06 ERROR (DWARFImportSummary) DWARF data type remappings (DWARF data type definitions that changed meaning in different compile units):  
2020-10-24 01:16:06 ERROR (DWARFImportSummary)   Data type -> changed to -> Data Type  
2020-10-24 01:16:06 ERROR (DWARFImportSummary)   /DWARF/_UNCATEGORIZED_/std/conditional<false,std--__undefined,charconst>/type -> /DWARF/_UNCATEGORIZED_/std/conditional<false,std--__undefined,char>/type  
2020-10-24 01:16:06 ERROR (DWARFImportSummary) DWARF variable definitions that failed because they depended on the dynamic value of a register: 2  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 00021913  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 0002192d  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 00021b00  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 00021bd1  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 00021490  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 00021640  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 00021611  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 00021663  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 00021e93  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 00021ec9  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 00021eb2  
2020-10-24 01:16:06 ERROR (GccExceptionAnalyzer) Failed to disassemble at 00021ee7  
2020-10-24 01:16:06 WARN  (DWARFAnalyzer) DWARF already imported, skipping.  (Detected DWARF program module)  
2020-10-24 01:16:07 DEBUG (CreateFunctionCmd) Creating external function symbol: __gmon_start__  
2020-10-24 01:16:07 DEBUG (CreateFunctionCmd) Creating external function symbol: _ITM_deregisterTMCloneTable  
2020-10-24 01:16:07 DEBUG (CreateFunctionCmd) Creating external function symbol: _ITM_registerTMCloneTable  
2020-10-24 01:16:07 INFO  (PackedDatabaseCache) Packed database cache: /tmp/wataru-Ghidra/packed-db-cache  
2020-10-24 01:16:07 DEBUG (PackedDatabaseCache) Using cached packed database: /usr/local/ghidra_9.1.2_PUBLIC/Ghidra/Features/Base/data/typeinfo/generic/generic_clib.gdt  
2020-10-24 01:16:07 ERROR (TypeInfoFactory) Unknown Exception ghidra.program.model.data.InvalidDataTypeException: The TypeInfo at 00016008 is not valid
	at ghidra.app.cmd.data.rtti.gcc.typeinfo.FundamentalTypeInfoModel.getModel(FundamentalTypeInfoModel.java:34)
	at ghidra.app.cmd.data.rtti.gcc.factory.TypeInfoFactory.getTypeInfo(TypeInfoFactory.java:108)
	at ghidra.app.plugin.prototype.CppCodeAnalyzerPlugin.gcc.GccCppClassAnalyzer.getClassTypeInfoList(GccCppClassAnalyzer.java:48)
	at ghidra.app.plugin.prototype.CppCodeAnalyzerPlugin.AbstractCppClassAnalyzer.added(AbstractCppClassAnalyzer.java:98)
	at ghidra.app.plugin.core.analysis.AnalysisScheduler.runAnalyzer(AnalysisScheduler.java:185)
	at ghidra.app.plugin.core.analysis.AnalysisTask.applyTo(AnalysisTask.java:39)
	at ghidra.app.plugin.core.analysis.AutoAnalysisManager$AnalysisTaskWrapper.run(AutoAnalysisManager.java:685)
	at ghidra.app.plugin.core.analysis.AutoAnalysisManager.startAnalysis(AutoAnalysisManager.java:785)
	at ghidra.app.plugin.core.analysis.AutoAnalysisManager.startAnalysis(AutoAnalysisManager.java:664)
	at ghidra.app.plugin.core.analysis.AutoAnalysisManager.startAnalysis(AutoAnalysisManager.java:629)
	at ghidra.app.util.headless.HeadlessAnalyzer.analyzeProgram(HeadlessAnalyzer.java:1025)
	at ghidra.app.util.headless.HeadlessAnalyzer.processFileWithImport(HeadlessAnalyzer.java:1558)
	at ghidra.app.util.headless.HeadlessAnalyzer.processWithImport(HeadlessAnalyzer.java:1696)
	at ghidra.app.util.headless.HeadlessAnalyzer.processWithImport(HeadlessAnalyzer.java:1762)
	at ghidra.app.util.headless.HeadlessAnalyzer.processLocal(HeadlessAnalyzer.java:438)
	at ghidra.app.util.headless.AnalyzeHeadless.launch(AnalyzeHeadless.java:121)
	at ghidra.GhidraLauncher.main(GhidraLauncher.java:79)
 
2020-10-24 01:16:07 ERROR (TypeInfoFactory) Unknown Exception ghidra.program.model.data.InvalidDataTypeException: The TypeInfo at 0001600c is not valid
	at ghidra.app.cmd.data.rtti.gcc.typeinfo.FundamentalTypeInfoModel.getModel(FundamentalTypeInfoModel.java:34)
	at ghidra.app.cmd.data.rtti.gcc.factory.TypeInfoFactory.getTypeInfo(TypeInfoFactory.java:108)
	at ghidra.app.plugin.prototype.CppCodeAnalyzerPlugin.gcc.GccCppClassAnalyzer.getClassTypeInfoList(GccCppClassAnalyzer.java:48)
	at ghidra.app.plugin.prototype.CppCodeAnalyzerPlugin.AbstractCppClassAnalyzer.added(AbstractCppClassAnalyzer.java:98)
	at ghidra.app.plugin.core.analysis.AnalysisScheduler.runAnalyzer(AnalysisScheduler.java:185)
	at ghidra.app.plugin.core.analysis.AnalysisTask.applyTo(AnalysisTask.java:39)
	at ghidra.app.plugin.core.analysis.AutoAnalysisManager$AnalysisTaskWrapper.run(AutoAnalysisManager.java:685)
	at ghidra.app.plugin.core.analysis.AutoAnalysisManager.startAnalysis(AutoAnalysisManager.java:785)
	at ghidra.app.plugin.core.analysis.AutoAnalysisManager.startAnalysis(AutoAnalysisManager.java:664)
	at ghidra.app.plugin.core.analysis.AutoAnalysisManager.startAnalysis(AutoAnalysisManager.java:629)
	at ghidra.app.util.headless.HeadlessAnalyzer.analyzeProgram(HeadlessAnalyzer.java:1025)
	at ghidra.app.util.headless.HeadlessAnalyzer.processFileWithImport(HeadlessAnalyzer.java:1558)
	at ghidra.app.util.headless.HeadlessAnalyzer.processWithImport(HeadlessAnalyzer.java:1696)
	at ghidra.app.util.headless.HeadlessAnalyzer.processWithImport(HeadlessAnalyzer.java:1762)
	at ghidra.app.util.headless.HeadlessAnalyzer.processLocal(HeadlessAnalyzer.java:438)
	at ghidra.app.util.headless.AnalyzeHeadless.launch(AnalyzeHeadless.java:121)
	at ghidra.GhidraLauncher.main(GhidraLauncher.java:79)
 
2020-10-24 01:16:08 INFO  (AutoAnalysisManager) -----------------------------------------------------
    ASCII Strings                              0.294 secs
    Apply Data Archives                        0.244 secs
    Call Convention Identification             0.023 secs
    Call-Fixup Installer                       0.011 secs
    Create Address Tables                      0.019 secs
    Create Function                            0.085 secs
    DWARF                                      0.545 secs
    Data Reference                             0.029 secs
    Decompiler Switch Analysis                 0.285 secs
    Demangler                                  0.044 secs
    Disassemble Entry Points                   0.198 secs
    ELF Scalar Operand References              0.038 secs
    Embedded Media                             0.032 secs
    External Entry References                  0.001 secs
    Function ID                                0.139 secs
    Function Start Search                      0.025 secs
    GCC C++ Class Analyzer                     0.010 secs
    GCC Exception Handlers                     0.177 secs
    GCC RTTI Analyzer                          0.009 secs
    Non-Returning Functions - Discovered       0.043 secs
    Non-Returning Functions - Known            0.006 secs
    Reference                                  0.034 secs
    Shared Return Calls                        0.005 secs
    Stack                                      0.300 secs
    Subroutine References                      0.014 secs
    Subroutine References - One Time           0.001 secs
    X86 Function Callee Purge                  0.016 secs
    x86 Constant Reference Analyzer            0.223 secs
-----------------------------------------------------
     Total Time   2 secs
-----------------------------------------------------
  
2020-10-24 01:16:08 INFO  (HeadlessAnalyzer) REPORT: Analysis succeeded for file: /home/wataru/Documents/ctf/hacklu2020/just_the_right_spot/public/./right_spot  
2020-10-24 01:16:08 INFO  (HeadlessAnalyzer) SCRIPT: /home/wataru/ghidra_scripts/preanalysis_headless.py  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b000, pcode error at 0201b000: Unable to disassemble EXTERNAL block location: 0201b000  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b004, pcode error at 0201b004: Unable to disassemble EXTERNAL block location: 0201b004  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b008, pcode error at 0201b008: Unable to disassemble EXTERNAL block location: 0201b008  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b00c, pcode error at 0201b00c: Unable to disassemble EXTERNAL block location: 0201b00c  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b010, pcode error at 0201b010: Unable to disassemble EXTERNAL block location: 0201b010  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b014, pcode error at 0201b014: Unable to disassemble EXTERNAL block location: 0201b014  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b018, pcode error at 0201b018: Unable to disassemble EXTERNAL block location: 0201b018  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b01c, pcode error at 0201b01c: Unable to disassemble EXTERNAL block location: 0201b01c  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b024, pcode error at 0201b024: Unable to disassemble EXTERNAL block location: 0201b024  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b028, pcode error at 0201b028: Unable to disassemble EXTERNAL block location: 0201b028  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b02c, pcode error at 0201b02c: Unable to disassemble EXTERNAL block location: 0201b02c  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b034, pcode error at 0201b034: Unable to disassemble EXTERNAL block location: 0201b034  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b038, pcode error at 0201b038: Unable to disassemble EXTERNAL block location: 0201b038  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b03c, pcode error at 0201b03c: Unable to disassemble EXTERNAL block location: 0201b03c  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b040, pcode error at 0201b040: Unable to disassemble EXTERNAL block location: 0201b040  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b044, pcode error at 0201b044: Unable to disassemble EXTERNAL block location: 0201b044  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b054, pcode error at 0201b054: Unable to disassemble EXTERNAL block location: 0201b054  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b058, pcode error at 0201b058: Unable to disassemble EXTERNAL block location: 0201b058  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b05c, pcode error at 0201b05c: Unable to disassemble EXTERNAL block location: 0201b05c  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b060, pcode error at 0201b060: Unable to disassemble EXTERNAL block location: 0201b060  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b064, pcode error at 0201b064: Unable to disassemble EXTERNAL block location: 0201b064  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b068, pcode error at 0201b068: Unable to disassemble EXTERNAL block location: 0201b068  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b06c, pcode error at 0201b06c: Unable to disassemble EXTERNAL block location: 0201b06c  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b070, pcode error at 0201b070: Unable to disassemble EXTERNAL block location: 0201b070  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b078, pcode error at 0201b078: Unable to disassemble EXTERNAL block location: 0201b078  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b07c, pcode error at 0201b07c: Unable to disassemble EXTERNAL block location: 0201b07c  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b080, pcode error at 0201b080: Unable to disassemble EXTERNAL block location: 0201b080  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b084, pcode error at 0201b084: Unable to disassemble EXTERNAL block location: 0201b084  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b088, pcode error at 0201b088: Unable to disassemble EXTERNAL block location: 0201b088  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b08c, pcode error at 0201b08c: Unable to disassemble EXTERNAL block location: 0201b08c  
2020-10-24 01:16:10 WARN  (DecompileCallback) Decompiling 0201b094, pcode error at 0201b094: Unable to disassemble EXTERNAL block location: 0201b094  
2020-10-24 01:16:11 WARN  (DecompileCallback) Decompiling 0201b098, pcode error at 0201b098: Unable to disassemble EXTERNAL block location: 0201b098  
2020-10-24 01:16:11 WARN  (DecompileCallback) Decompiling 0201b09c, pcode error at 0201b09c: Unable to disassemble EXTERNAL block location: 0201b09c  
2020-10-24 01:16:11 WARN  (DecompileCallback) Decompiling 0201b0a0, pcode error at 0201b0a0: Unable to disassemble EXTERNAL block location: 0201b0a0  
2020-10-24 01:16:11 WARN  (DecompileCallback) Decompiling 0201b0a4, pcode error at 0201b0a4: Unable to disassemble EXTERNAL block location: 0201b0a4  
2020-10-24 01:16:11 WARN  (DecompileCallback) Decompiling 0201b0a8, pcode error at 0201b0a8: Unable to disassemble EXTERNAL block location: 0201b0a8  
2020-10-24 01:16:11 INFO  (HeadlessAnalyzer) ANALYZING changes made by post scripts: /home/wataru/Documents/ctf/hacklu2020/just_the_right_spot/public/./right_spot  
2020-10-24 01:16:11 INFO  (HeadlessAnalyzer) REPORT: Post-analysis succeeded for file: /home/wataru/Documents/ctf/hacklu2020/just_the_right_spot/public/./right_spot  
2020-10-24 01:16:11 INFO  (HeadlessAnalyzer) REPORT: Save succeeded for file: /right_spot  
