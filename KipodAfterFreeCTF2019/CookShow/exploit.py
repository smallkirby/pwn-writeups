#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./CookShow"

rhp2 = {'host':"localhost",'port':12400}
context(os='linux',arch='amd64')
binf = ELF(FILENAME)

def _add(conn,_type,size,content):
  if _type==1:
    low = 1
    high = 0x7f
  elif _type == 2:
    low = 0x20
    high = 0xc7
  elif _type == 3:
    low = 0xc9
    high = 0xf9f
  else:
    print("error _type")
    raw_input("enter to exit")
    exit(1)
  
  if not low<=size<=high:
    print("[!]invalid size")
    raw_input("enter to exit")
    exit(1)

  conn.recvuntil("Choose: ")
  conn.sendline("1")
  conn.recvuntil("Big")
  conn.sendline(str(_type))
  conn.recvuntil("recipe: ")
  conn.sendline(hex(size)[2:])
  conn.recvuntil("recipe: ")
  conn.sendline(content)

def _print(conn,_type):
  conn.recvuntil("Choose: ")
  conn.sendline("3")
  conn.recvuntil("Big")
  conn.sendline(str(_type))

def _del(conn,_type):
  conn.recvuntil("Choose: ")
  conn.sendline("2")
  conn.recvuntil("Big")
  conn.sendline(str(_type))

def exploit(conn):
  return
  _add(conn,1,0x40,"A"*0x20)
  #_del(conn,1)
  #_del(conn,1)
  #_print(conn,1)

if len(sys.argv)>1:
  if sys.argv[1][0]=="d":
    cmd = """
      set follow-fork-mode parent
    """
    conn = gdb.debug(FILENAME,cmd)
  elif sys.argv[1][0]=="r":
    s = ssh(user="yeet",host="ctf.kaf.sh",port=7030,password="12345678")
    #conn = remote(user="yeet",host="ctf.kaf.sh",port=7030,password="12345678")
    conn = s.run("shell")
    #conn = s.connect_remote("ctf.kaf.sh",7030)
    #conn = s.process("./CookShow")
    print("[*]connected")
    #conn.interactive()
else:
    conn = remote(rhp2['host'],rhp2['port'])
exploit(conn)
conn.interactive()

